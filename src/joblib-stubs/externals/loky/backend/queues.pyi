from _typeshed import Incomplete
from multiprocessing.queues import Full as Full, Queue as mp_Queue, SimpleQueue as mp_SimpleQueue

__all__ = ['Queue', 'SimpleQueue', 'Full']

class Queue(mp_Queue):
    def __init__(self, maxsize: int = 0, reducers: Incomplete | None = None, ctx: Incomplete | None = None) -> None: ...

class SimpleQueue(mp_SimpleQueue):
    def __init__(self, reducers: Incomplete | None = None, ctx: Incomplete | None = None) -> None: ...
    def close(self) -> None: ...
    def put(self, obj) -> None: ...
